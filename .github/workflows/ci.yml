name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ['**']
  push:
    branches: ['main', '**']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: .
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required for --from-ref/--to-ref

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pre-commit mypy pytest
      - name: Ensure pinned ruff (0.13.0)
        run: |
          python -m pip install --upgrade --force-reinstall "ruff==0.13.0"
          ruff --version
      - name: Verify ruff version
        run: |
          V=$(ruff --version | awk '{print $2}')
          test "$V" = "0.13.0" || (echo "::error::Expected ruff 0.13.0, got $V"; exit 2)

      - name: Tooling versions
        run: |
          ruff --version || true
          mypy --version || true

      # Force fresh pre-commit environment to defeat ruff version cache drift
      - name: Clear pre-commit cache (force ruff 0.13.0)
        run: rm -rf ~/.cache/pre-commit

      # PRs: run on the diff (baseâ†’head)
      - name: Pre-commit (PR diff)
        if: ${{ github.event_name == 'pull_request' }}
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }}

      # Pushes: run on all files (e.g., pushes to main)
      - name: Pre-commit (push all-files)
        if: ${{ github.event_name != 'pull_request' }}
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

      # Temporarily disabled - pre-existing code quality issues
      # Will be re-enabled after codebase cleanup
      # - name: Lint & type
      #   run: |
      #     make py.lint || ruff check
      #     make py.type || mypy --config-file=mypy.ini --ignore-missing-imports src

      - name: Audits
        run: |
          make rules.navigator.check rules.audit repo.audit docs.audit

      - name: Smoke tests
        run: |
          make test.smoke

      - name: SSOT JSONSchema (PR-diff)
        if: ${{ github.event_name == 'pull_request' }}
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          set -e
          make -s ssot.validate.changed

      - name: Edge reclassify (non-blocking)
        run: |
          set -e
          export MOCK_AI=1
          make -s eval.edges.reclassify || true
